"""Configuration helpers for the API Flask app."""
from __future__ import annotations

import os
from typing import Any, Dict

from .constants import (
    DEFAULT_AVATAR_UPLOAD_DIR,
    DEFAULT_BASENAME,
    DEFAULT_CHAT_UPLOAD_DIR,
    DEFAULT_CORS_ORIGIN,
    DEFAULT_INTERNAL_TOKEN,
    DEFAULT_INGEST_CONTROL_URL,
    DEFAULT_OUTPUT,
    DEFAULT_PLEX_CLIENT_IDENTIFIER,
    DEFAULT_PLEX_DEVICE_NAME,
    DEFAULT_PLEX_ENABLE_ACCOUNT_LOOKUP,
    DEFAULT_PLEX_IMAGE_CACHE_DIR,
    DEFAULT_PLEX_PLATFORM,
    DEFAULT_PLEX_PRODUCT,
    DEFAULT_PLEX_SERVER_BASE_URL,
    DEFAULT_PLEX_TIMEOUT_SECONDS,
    DEFAULT_PLEX_VERSION,
    DEFAULT_PUBLISH_BASE_URL,
    DEFAULT_REDIS_MAX_ENTRIES,
    DEFAULT_REDIS_PREFIX,
    DEFAULT_REDIS_TTL_SECONDS,
    DEFAULT_REDIS_URL,
    DEFAULT_SQLITE_PATH,
    DEFAULT_STATUS_CHANNEL,
    DEFAULT_STATUS_KEY,
    DEFAULT_STATUS_NAMESPACE,
    DEFAULT_STATUS_STALE_SECONDS,
    DEFAULT_TRANSCODER_SERVICE_TIMEOUT_SECONDS,
    DEFAULT_TRANSCODER_SERVICE_URL,
)


def build_default_config() -> Dict[str, Any]:
    """Return the base configuration mapping for the API service."""

    secret_key = os.getenv("TRANSCODER_SECRET_KEY") or os.getenv("FLASK_SECRET_KEY")
    database_uri = os.getenv("TRANSCODER_DATABASE_URI") or os.getenv("TRANSCODER_USER_DB")
    if not database_uri:
        DEFAULT_SQLITE_PATH.parent.mkdir(parents=True, exist_ok=True)
        database_uri = f"sqlite:///{DEFAULT_SQLITE_PATH}"

    cfg: Dict[str, Any] = {
        "SECRET_KEY": secret_key or "dev-change-me",
        "SESSION_COOKIE_SAMESITE": "Lax",
        "SESSION_COOKIE_HTTPONLY": True,
        "SQLALCHEMY_DATABASE_URI": database_uri,
        "SQLALCHEMY_TRACK_MODIFICATIONS": False,
        "TRANSCODER_OUTPUT": DEFAULT_OUTPUT,
        "TRANSCODER_OUTPUT_BASENAME": DEFAULT_BASENAME,
        "TRANSCODER_PUBLISH_BASE_URL": DEFAULT_PUBLISH_BASE_URL,
        "TRANSCODER_SERVICE_URL": DEFAULT_TRANSCODER_SERVICE_URL,
        "TRANSCODER_SERVICE_TIMEOUT_SECONDS": DEFAULT_TRANSCODER_SERVICE_TIMEOUT_SECONDS,
        "INGEST_CONTROL_URL": DEFAULT_INGEST_CONTROL_URL,
        "TRANSCODER_CORS_ORIGIN": DEFAULT_CORS_ORIGIN,
        "TRANSCODER_CHAT_UPLOAD_DIR": DEFAULT_CHAT_UPLOAD_DIR,
        "TRANSCODER_AVATAR_UPLOAD_DIR": DEFAULT_AVATAR_UPLOAD_DIR,
        "PLEX_IMAGE_CACHE_DIR": DEFAULT_PLEX_IMAGE_CACHE_DIR,
        "PLEX_CLIENT_IDENTIFIER": DEFAULT_PLEX_CLIENT_IDENTIFIER,
        "PLEX_PRODUCT": DEFAULT_PLEX_PRODUCT,
        "PLEX_DEVICE_NAME": DEFAULT_PLEX_DEVICE_NAME,
        "PLEX_PLATFORM": DEFAULT_PLEX_PLATFORM,
        "PLEX_VERSION": DEFAULT_PLEX_VERSION,
        "PLEX_SERVER_BASE_URL": DEFAULT_PLEX_SERVER_BASE_URL,
        "PLEX_ENABLE_ACCOUNT_LOOKUP": DEFAULT_PLEX_ENABLE_ACCOUNT_LOOKUP,
        "PLEX_TIMEOUT_SECONDS": DEFAULT_PLEX_TIMEOUT_SECONDS,
        "TRANSCODER_INTERNAL_TOKEN": DEFAULT_INTERNAL_TOKEN,
        "TRANSCODER_STATUS_NAMESPACE": DEFAULT_STATUS_NAMESPACE,
        "TRANSCODER_STATUS_KEY": DEFAULT_STATUS_KEY,
        "TRANSCODER_STATUS_STALE_SECONDS": DEFAULT_STATUS_STALE_SECONDS,
        "TRANSCODER_STATUS_CHANNEL": DEFAULT_STATUS_CHANNEL,
        "REDIS_URL": DEFAULT_REDIS_URL,
        "REDIS_MAX_ENTRIES": DEFAULT_REDIS_MAX_ENTRIES,
        "REDIS_TTL_SECONDS": DEFAULT_REDIS_TTL_SECONDS,
        "REDIS_PREFIX": DEFAULT_REDIS_PREFIX,
    }
    return cfg


__all__ = ["build_default_config"]
